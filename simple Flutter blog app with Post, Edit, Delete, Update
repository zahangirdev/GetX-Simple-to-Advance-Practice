import 'package:flutter/material.dart';
import 'package:get/get.dart';

// Blog Model
class Blog {
  String title;
  String content;
  Blog({required this.title, required this.content});
}

// Blog Controller using GetX
class BlogController extends GetxController {
  var blogs = <Blog>[].obs;

  void addBlog(String title, String content) {
    blogs.add(Blog(title: title, content: content));
  }

  void updateBlog(int index, String title, String content) {
    blogs[index].title = title;
    blogs[index].content = content;
    blogs.refresh();
  }

  void deleteBlog(int index) {
    blogs.removeAt(index);
  }
}

// Main App
void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) {
    return GetMaterialApp(
      debugShowCheckedModeBanner: false,
      title: "Kids Blog",
      theme: ThemeData(
        primarySwatch: Colors.purple,
      ),
      home: const BlogHome(),
    );
  }
}

// Home Screen
class BlogHome extends StatelessWidget {
  const BlogHome({super.key});

  @override
  Widget build(BuildContext context) {
    final BlogController blogController = Get.put(BlogController());

    return Scaffold(
      appBar: AppBar(
        title: const Text("Kids Blog App ‚ú®"),
        backgroundColor: Colors.purple,
      ),
      body: Obx(() => blogController.blogs.isEmpty
          ? const Center(
              child: Text("No Blog Posts Yet üìù",
                  style: TextStyle(fontSize: 20, color: Colors.grey)))
          : ListView.builder(
              itemCount: blogController.blogs.length,
              itemBuilder: (context, index) {
                final blog = blogController.blogs[index];
                return Card(
                  color: Colors.purple[100],
                  margin: const EdgeInsets.all(10),
                  child: ListTile(
                    title: Text(blog.title,
                        style: const TextStyle(
                            fontSize: 20, fontWeight: FontWeight.bold)),
                    subtitle: Text(blog.content),
                    trailing: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        IconButton(
                          icon: const Icon(Icons.edit, color: Colors.blue),
                          onPressed: () {
                            Get.to(() => BlogForm(
                                isEdit: true, index: index, blog: blog));
                          },
                        ),
                        IconButton(
                          icon: const Icon(Icons.delete, color: Colors.red),
                          onPressed: () {
                            blogController.deleteBlog(index);
                          },
                        ),
                      ],
                    ),
                  ),
                );
              },
            )),
      floatingActionButton: FloatingActionButton(
        backgroundColor: Colors.purple,
        onPressed: () {
          Get.to(() => const BlogForm(isEdit: false));
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}

// Blog Form (Add & Edit)
class BlogForm extends StatelessWidget {
  final bool isEdit;
  final int? index;
  final Blog? blog;

  const BlogForm({super.key, required this.isEdit, this.index, this.blog});

  @override
  Widget build(BuildContext context) {
    final BlogController blogController = Get.find();
    final TextEditingController titleController =
        TextEditingController(text: isEdit ? blog?.title : "");
    final TextEditingController contentController =
        TextEditingController(text: isEdit ? blog?.content : "");

    return Scaffold(
      appBar: AppBar(
        title: Text(isEdit ? "Edit Blog üñäÔ∏è" : "Add Blog ‚ú®"),
        backgroundColor: Colors.purple,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            TextField(
              controller: titleController,
              decoration: const InputDecoration(
                  labelText: "Title", border: OutlineInputBorder()),
            ),
            const SizedBox(height: 15),
            TextField(
              controller: contentController,
              maxLines: 5,
              decoration: const InputDecoration(
                  labelText: "Content", border: OutlineInputBorder()),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.purple,
                padding:
                    const EdgeInsets.symmetric(horizontal: 40, vertical: 15),
              ),
              onPressed: () {
                if (isEdit && index != null) {
                  blogController.updateBlog(
                      index!, titleController.text, contentController.text);
                } else {
                  blogController.addBlog(
                      titleController.text, contentController.text);
                }
                Get.back();
              },
              child: Text(isEdit ? "Update Blog ‚úÖ" : "Add Blog üìù",
                  style: const TextStyle(fontSize: 18)),
            )
          ],
        ),
      ),
    );
  }
}
